package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.57

import (
	"context"
	"fmt"
	"template/internal/graph/model"

	"github.com/google/uuid"
)

// CreateQuestionCollection is the resolver for the createQuestionCollection field.
func (r *mutationResolver) CreateQuestionCollection(ctx context.Context, input model.CreateQuestionCollectionInput) (*model.QuestionCollection, error) {
	panic(fmt.Errorf("not implemented: CreateQuestionCollection - createQuestionCollection"))
}

// UpdateQuestionCollection is the resolver for the updateQuestionCollection field.
func (r *mutationResolver) UpdateQuestionCollection(ctx context.Context, id uuid.UUID, input model.UpdateQuestionCollectionInput) (*model.QuestionCollection, error) {
	panic(fmt.Errorf("not implemented: UpdateQuestionCollection - updateQuestionCollection"))
}

// DeleteQuestionCollection is the resolver for the deleteQuestionCollection field.
func (r *mutationResolver) DeleteQuestionCollection(ctx context.Context, id uuid.UUID) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteQuestionCollection - deleteQuestionCollection"))
}

// QuestionCollection is the resolver for the questionCollection field.
func (r *queryResolver) QuestionCollection(ctx context.Context, id uuid.UUID) (*model.QuestionCollection, error) {
	panic(fmt.Errorf("not implemented: QuestionCollection - questionCollection"))
}

// PaginatedQuestionCollections is the resolver for the paginatedQuestionCollections field.
func (r *queryResolver) PaginatedQuestionCollections(ctx context.Context, paginationInput *model.PaginationInput) (*model.PaginatedQuestionCollection, error) {
	panic(fmt.Errorf("not implemented: PaginatedQuestionCollections - paginatedQuestionCollections"))
}

// Creator is the resolver for the creator field.
func (r *questionCollectionResolver) Creator(ctx context.Context, obj *model.QuestionCollection) (*model.User, error) {
	panic(fmt.Errorf("not implemented: Creator - creator"))
}

// Questions is the resolver for the questions field.
func (r *questionCollectionResolver) Questions(ctx context.Context, obj *model.QuestionCollection) ([]*model.Question, error) {
	panic(fmt.Errorf("not implemented: Questions - questions"))
}

// QuestionCollection returns QuestionCollectionResolver implementation.
func (r *Resolver) QuestionCollection() QuestionCollectionResolver {
	return &questionCollectionResolver{r}
}

type questionCollectionResolver struct{ *Resolver }
