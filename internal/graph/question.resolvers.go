package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.57

import (
	"context"
	"fmt"
	"template/internal/graph/model"

	"github.com/google/uuid"
)

// CreateQuestion is the resolver for the createQuestion field.
func (r *mutationResolver) CreateQuestion(ctx context.Context, input model.CreateQuestionInput) (*model.Question, error) {
	panic(fmt.Errorf("not implemented: CreateQuestion - createQuestion"))
}

// UpdateQuestion is the resolver for the updateQuestion field.
func (r *mutationResolver) UpdateQuestion(ctx context.Context, id uuid.UUID, input model.UpdateQuestionInput) (*model.Question, error) {
	panic(fmt.Errorf("not implemented: UpdateQuestion - updateQuestion"))
}

// DeleteQuestion is the resolver for the deleteQuestion field.
func (r *mutationResolver) DeleteQuestion(ctx context.Context, id uuid.UUID) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteQuestion - deleteQuestion"))
}

// Question is the resolver for the question field.
func (r *queryResolver) Question(ctx context.Context, id uuid.UUID) (*model.Question, error) {
	panic(fmt.Errorf("not implemented: Question - question"))
}

// PaginatedQuestions is the resolver for the paginatedQuestions field.
func (r *queryResolver) PaginatedQuestions(ctx context.Context, paginationInput *model.PaginationInput) (*model.PaginatedQuestion, error) {
	panic(fmt.Errorf("not implemented: PaginatedQuestions - paginatedQuestions"))
}
