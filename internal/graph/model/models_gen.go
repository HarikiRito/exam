// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Auth struct {
	AccessToken  string `json:"accessToken"`
	RefreshToken string `json:"refreshToken"`
}

type CreateCourseInput struct {
	Title       string `json:"title"`
	Description string `json:"description"`
}

type CreateCourseSectionInput struct {
	Title       string `json:"title"`
	Description string `json:"description"`
	CourseID    string `json:"courseId"`
}

type CreateQuestionInput struct {
	QuestionText    string   `json:"questionText"`
	CourseSectionID *string  `json:"courseSectionId,omitempty"`
	OptionIds       []string `json:"optionIds,omitempty"`
}

type CreateQuestionOptionInput struct {
	QuestionID string `json:"questionId"`
	OptionText string `json:"optionText"`
	IsCorrect  bool   `json:"isCorrect"`
}

type CreateTestInput struct {
	Name            string   `json:"name"`
	CourseSectionID *string  `json:"courseSectionId,omitempty"`
	CourseID        *string  `json:"courseId,omitempty"`
	QuestionIds     []string `json:"questionIds"`
}

type LoginInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type Mutation struct {
}

type NewTodo struct {
	Text string `json:"text"`
}

type PaginatedCourse struct {
	Pagination *Pagination `json:"pagination"`
	Items      []*Course   `json:"items"`
}

type PaginatedQuestion struct {
	Pagination *Pagination `json:"pagination"`
	Items      []*Question `json:"items"`
}

type PaginatedQuestionOption struct {
	Pagination *Pagination       `json:"pagination"`
	Items      []*QuestionOption `json:"items"`
}

type PaginatedTest struct {
	Pagination *Pagination `json:"pagination"`
	Items      []*Test     `json:"items"`
}

type Pagination struct {
	CurrentPage     int  `json:"currentPage"`
	TotalPages      int  `json:"totalPages"`
	TotalItems      int  `json:"totalItems"`
	HasNextPage     bool `json:"hasNextPage"`
	HasPreviousPage bool `json:"hasPreviousPage"`
}

type PaginationInput struct {
	Page   int     `json:"page"`
	Limit  int     `json:"limit"`
	Search *string `json:"search,omitempty"`
}

type Query struct {
}

type Question struct {
	ID           string            `json:"id"`
	QuestionText string            `json:"questionText"`
	Section      *CourseSection    `json:"section,omitempty"`
	Options      []*QuestionOption `json:"options"`
}

type QuestionOption struct {
	ID         string    `json:"id"`
	Question   *Question `json:"question"`
	OptionText string    `json:"optionText"`
	IsCorrect  bool      `json:"isCorrect"`
}

type RegisterInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type Test struct {
	ID            string         `json:"id"`
	Name          string         `json:"name"`
	CourseSection *CourseSection `json:"courseSection,omitempty"`
	Course        *Course        `json:"course,omitempty"`
}

type Todo struct {
	ID   string `json:"id"`
	Text string `json:"text"`
}

type UpdateCourseInput struct {
	Title       *string `json:"title,omitempty"`
	Description *string `json:"description,omitempty"`
}

type UpdateCourseSectionInput struct {
	Title       *string `json:"title,omitempty"`
	Description *string `json:"description,omitempty"`
}

type UpdateQuestionInput struct {
	QuestionText    *string  `json:"questionText,omitempty"`
	CourseSectionID *string  `json:"courseSectionId,omitempty"`
	OptionIds       []string `json:"optionIds,omitempty"`
}

type UpdateQuestionOptionInput struct {
	OptionText *string `json:"optionText,omitempty"`
	IsCorrect  *bool   `json:"isCorrect,omitempty"`
}

type UpdateTestInput struct {
	Name            *string  `json:"name,omitempty"`
	CourseSectionID *string  `json:"courseSectionId,omitempty"`
	CourseID        *string  `json:"courseId,omitempty"`
	QuestionIds     []string `json:"questionIds"`
}

type User struct {
	ID    string `json:"id"`
	Email string `json:"email"`
}
