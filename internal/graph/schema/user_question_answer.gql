extend type Mutation {
  createUserQuestionAnswer(input: CreateUserQuestionAnswerInput!): UserQuestionAnswer!
  updateUserQuestionAnswer(id: ID!, input: UpdateUserQuestionAnswerInput!): UserQuestionAnswer!
  deleteUserQuestionAnswer(id: ID!): Boolean!
}

extend type Query {
  userQuestionAnswer(id: ID!): UserQuestionAnswer!
  paginatedUserQuestionAnswers(paginationInput: PaginationInput): PaginatedUserQuestionAnswer!
}

type UserQuestionAnswer {
  id: ID!
  user: User!
  question: Question!
  selectedOption: QuestionOption!
  testSession: TestSession!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type PaginatedUserQuestionAnswer {
  pagination: Pagination!
  items: [UserQuestionAnswer!]!
}

input CreateUserQuestionAnswerInput {
  userId: ID!
  questionId: ID!
  selectedOptionId: ID!
  testSessionId: ID!
}

input UpdateUserQuestionAnswerInput {
  selectedOptionId: ID
} 