package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.57

import (
	"context"
	"fmt"
	"template/internal/graph/model"

	"github.com/google/uuid"
)

// CreateQuestionOption is the resolver for the createQuestionOption field.
func (r *mutationResolver) CreateQuestionOption(ctx context.Context, input model.CreateQuestionOptionInput) (*model.QuestionOption, error) {
	panic(fmt.Errorf("not implemented: CreateQuestionOption - createQuestionOption"))
}

// UpdateQuestionOption is the resolver for the updateQuestionOption field.
func (r *mutationResolver) UpdateQuestionOption(ctx context.Context, id uuid.UUID, input model.UpdateQuestionOptionInput) (*model.QuestionOption, error) {
	panic(fmt.Errorf("not implemented: UpdateQuestionOption - updateQuestionOption"))
}

// DeleteQuestionOption is the resolver for the deleteQuestionOption field.
func (r *mutationResolver) DeleteQuestionOption(ctx context.Context, id uuid.UUID) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteQuestionOption - deleteQuestionOption"))
}

// QuestionOption is the resolver for the questionOption field.
func (r *queryResolver) QuestionOption(ctx context.Context, id uuid.UUID) (*model.QuestionOption, error) {
	panic(fmt.Errorf("not implemented: QuestionOption - questionOption"))
}

// PaginatedQuestionOptions is the resolver for the paginatedQuestionOptions field.
func (r *queryResolver) PaginatedQuestionOptions(ctx context.Context, paginationInput *model.PaginationInput) (*model.PaginatedQuestionOption, error) {
	panic(fmt.Errorf("not implemented: PaginatedQuestionOptions - paginatedQuestionOptions"))
}
